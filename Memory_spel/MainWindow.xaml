<Window x:Class="Memory_spel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Memory_spel"
        mc:Ignorable="d"
        Background="#EAD6F2"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="180" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Triggers voor opacity verandering bij hover -->
            <Style.Triggers>
                <!-- Wanneer de muis over de afbeelding is, verander de dekking -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
                <!-- Herstel de dekking wanneer de muis de knop verlaat -->
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height=".75*"></RowDefinition>
        </Grid.RowDefinitions>

        <!-- Titel -->
        <Viewbox Grid.ColumnSpan="2">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#35263B" FontFamily="Comic Sans MS" FontWeight="Bold">Memory</TextBlock>
        </Viewbox>

        <!-- Nieuwe Grid met twee kolommen in de tweede rij; in iedere kolom een ronde knop met afbeelding -->
        <Grid Grid.ColumnSpan="2" Margin="0,91,0,68" Grid.RowSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!-- Eerste knop met afbeelding en hover opacity effect -->
            <Viewbox>
                <Button x:Name="ButtonStartKind" Style="{DynamicResource RoundedButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="250" Width="250" Click="ButtonStartKind_Click" >
                    <Button.Background>
                        <ImageBrush ImageSource="/Afbeeldingen/kind008.jpg"></ImageBrush>
                    </Button.Background>
                </Button>
            </Viewbox>

            <!-- Tweede knop met afbeelding en hover opacity effect -->
            <Viewbox Grid.Column="1">
                <Button x:Name="ButtonStartVolw" Style="{DynamicResource RoundedButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="250" Width="250" >
                    <Button.Background>
                        <ImageBrush ImageSource="/Afbeeldingen/volwassen003.jpg"></ImageBrush>
                    </Button.Background>
                </Button>
            </Viewbox>
        </Grid>

        <!-- Nieuwe Grid met twee kolommen in de derde rij; in iedere kolom een Textblock -->
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Viewbox>
                <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#B876DA" FontFamily="Comic Sans MS" FontWeight="DemiBold">Kind</TextBlock>
            </Viewbox>
            <Viewbox Grid.Column="1">
                <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#B876DA" FontFamily="Comic Sans MS" FontWeight="DemiBold">Volwassen</TextBlock>
            </Viewbox>
        </Grid>
    </Grid>
</Window>